<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.cisiondata.modules.oauth.dao.UserDAO">

	<resultMap type="User" id="userResultMap">
		<id property="id" column="ID" />
		<result property="username" column="USERNAME" />
		<result property="password" column="PASSWORD" />
		<result property="salt" column="SALT" />
		<result property="createTime" column="CREATE_TIME" />
		<result property="expireTime" column="EXPIRE_TIME" />
		<result property="deleteFlag" column="DELETE_FLAG" />
	</resultMap>

	<sql id="columnClause">
		ID, USERNAME, PASSWORD, SALT, CREATE_TIME, EXPIRE_TIME, DELETE_FLAG
	</sql>

	<sql id="whereClause">
		<where>
			<if test="condition.username != null and condition.username != ''">
				AND USERNAME = #{condition.username}
			</if>
			<if test="condition.password != null and condition.password != ''">
				AND PASSWORD = #{condition.password}
			</if>
			<if test="condition.expireTime != null">
				AND EXPIRE_TIME = #{condition.expireTime}
			</if>
			<if test="condition.deleteFlag != null">
				AND DELETE_FLAG = #{condition.deleteFlag}
			</if>
		</where>
	</sql>

	<insert id="insert" keyProperty="id" parameterType="User">
		INSERT INTO T_USER(USERNAME, PASSWORD, SALT, CREATE_TIME, EXPIRE_TIME, DELETE_FLAG)
		VALUES(#{username},#{password},#{salt},#{createTime},#{expireTime},#{deleteFlag})
	</insert>

	<update id="update" parameterType="User">
		UPDATE T_USER
		<set>
			<if test="password != null">
				PASSWORD = #{password},
			</if>
			<if test="expireTime != null">
				EXPIRE_TIME = #{expireTime},
			</if>
			<if test="status != null">
				STATUS = #{status},
			</if>
			<if test="deleteFlag != null">
				DELETE_FLAG = #{deleteFlag},
			</if>
		</set>
		WHERE USERNAME=#{username}
	</update>

	<select id="readDataByPK" resultMap="userResultMap">
		SELECT
		<include refid="columnClause" />
		FROM T_USER WHERE ID = #{id}
	</select>

	<select id="readDataByCondition" resultMap="userResultMap">
		SELECT
		<include refid="columnClause" />
		FROM T_USER
		<include refid="whereClause" />
	</select>


	<select id="readDataListByCondition" resultMap="userResultMap">
		SELECT
		<include refid="columnClause" />
		FROM T_USER
		<include refid="whereClause" />
	</select>

	<select id="readDataPaginationByCondition" resultMap="userResultMap">  
        <![CDATA[ 
            SELECT * FROM T_USER
        ]]>
	</select>

</mapper>