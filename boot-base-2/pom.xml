<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.platform</groupId>
	<artifactId>boot-base</artifactId>
	<version>0.0.2-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>Boot Base Project</name>
	<url>http://maven.apache.org</url>
	
	<parent>
		<groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-starter-parent</artifactId>
	    <version>2.1.1.RELEASE</version>
	    <relativePath/>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<druid.version>1.1.20</druid.version>
		<commons.io.version>2.6</commons.io.version>
		<commons.dbcp.version>1.4</commons.dbcp.version>
		<commons.lang.version>2.6</commons.lang.version>
		<commons.fileupload.version>1.3.3</commons.fileupload.version>
		<dom4j.version>1.6.1</dom4j.version>
		<cglib.version>3.2.5</cglib.version>
		<httpclient.version>4.5.4</httpclient.version>
		<fastjson.version>1.2.25</fastjson.version>
		<persistence.version>1.0</persistence.version>
		<guava.version>18.0</guava.version>
		<jsoup.version>1.10.1</jsoup.version>
		<logback.version>1.1.7</logback.version>
		<mybatis.version>3.4.5</mybatis.version>
		<mybatis.spring.version>1.3.1</mybatis.spring.version>
		<mybatis.spring.boot.version>1.3.1</mybatis.spring.boot.version>
		<mybatis.generator.core.version>1.3.6</mybatis.generator.core.version>
		<aspectj.version>1.8.10</aspectj.version>
		<jedis.version>2.9.0</jedis.version>
		<thymeleaf.version>3.0.11.RELEASE</thymeleaf.version>
		<thymeleaf.layout.version>2.3.0</thymeleaf.layout.version>
	</properties>

	<dependencies>
		<!-- Spring依赖包 -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-context-support</artifactId>
		    <version>5.1.3.RELEASE</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
		
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-web</artifactId>
		    <version>5.1.3.RELEASE</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
	
		<!-- Spring Boot依赖包 -->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter</artifactId>
		    <exclusions>  
		        <exclusion>  
		            <groupId>org.springframework.boot</groupId>  
		            <artifactId>spring-boot-starter-logging</artifactId>  
		        </exclusion>
		    </exclusions>  
		</dependency>
		
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
		
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-test</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-configuration-processor</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-properties-migrator</artifactId>
		</dependency>

		<!--Commons IO依赖包 -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons.io.version}</version>
		</dependency>
		
		<!--Commons Lang依赖包 -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>${commons.lang.version}</version>
		</dependency>
		
		<!-- Commons FileUpload依赖包 -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>${commons.fileupload.version}</version>
		</dependency>
		
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.2</version>
		</dependency>
		
		<!-- Dom4j依赖包 -->
		<dependency>
			<groupId>dom4j</groupId>
			<artifactId>dom4j</artifactId>
			<version>${dom4j.version}</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
		
		<!-- CGLIB依赖包 -->
		<dependency>
		    <groupId>cglib</groupId>
		    <artifactId>cglib</artifactId>
		    <version>${cglib.version}</version>
		</dependency>
		
		<!-- Httpclient依赖包 -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>${httpclient.version}</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
		
		<dependency>
		    <groupId>org.apache.httpcomponents</groupId>
		    <artifactId>httpmime</artifactId>
		    <version>${httpclient.version}</version><!--$NO-MVN-MAN-VER$-->
		</dependency>

		<!-- Jackon依赖包 -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		
		<!-- Gson依赖包 -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>
		
		<!-- FastJSON依赖包 -->
		<dependency>
		    <groupId>com.alibaba</groupId>
		    <artifactId>fastjson</artifactId>
		    <version>${fastjson.version}</version>
		</dependency>
		
		<!-- Javax Persistence依赖包 -->
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>${persistence.version}</version>
		</dependency>
		
		<!-- Guava依赖包 -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
        
        <!-- JSoup依赖包 -->
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>${jsoup.version}</version>
		</dependency>

		<!-- Slf4j依赖包 -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		
		<dependency> 
			<groupId>org.slf4j</groupId> 
			<artifactId>jcl-over-slf4j</artifactId> 
		</dependency>
		
		<!--Logback依赖包 -->
		<dependency>
		    <groupId>ch.qos.logback</groupId>
		    <artifactId>logback-classic</artifactId>
		    <version>${logback.version}</version><!--$NO-MVN-MAN-VER$-->
		</dependency>

		<dependency>
		    <groupId>ch.qos.logback</groupId>
		    <artifactId>logback-core</artifactId>
		    <version>${logback.version}</version><!--$NO-MVN-MAN-VER$-->
		</dependency>

		<dependency>
		    <groupId>ch.qos.logback</groupId>
		    <artifactId>logback-access</artifactId>
		    <version>${logback.version}</version><!--$NO-MVN-MAN-VER$-->
		</dependency>

		<dependency>
			<groupId>org.logback-extensions</groupId>
			<artifactId>logback-ext-spring</artifactId>
			<version>0.1.4</version>
		</dependency>
		
		<!-- Mysql依赖包-->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		
		<!-- DRUID依赖包 -->
		<dependency>
		    <groupId>com.alibaba</groupId>
		    <artifactId>druid</artifactId>
		    <version>${druid.version}</version>
		</dependency>
		
		<!-- HikariCP依赖包 -->
		<dependency>
		    <groupId>com.zaxxer</groupId>
		    <artifactId>HikariCP</artifactId>
		</dependency>
		
		<!-- Mybatis依赖包-->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>${mybatis.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>${mybatis.spring.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.mybatis.generator</groupId>
			<artifactId>mybatis-generator-core</artifactId>
			<version>${mybatis.generator.core.version}</version>
		</dependency>
		
		<!--  
		<dependency>
		    <groupId>org.mybatis.spring.boot</groupId>
		    <artifactId>mybatis-spring-boot-starter</artifactId>
		    <version>${mybatis.spring.boot.version}</version>
		</dependency>
		-->
		
		<!-- ASpectj依赖包 -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${aspectj.version}</version><!--$NO-MVN-MAN-VER$-->
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${aspectj.version}</version><!--$NO-MVN-MAN-VER$-->
		</dependency>

		<dependency>
			<groupId>aopalliance</groupId>
			<artifactId>aopalliance</artifactId>
			<version>1.0</version>
		</dependency>
		
		<!-- Redis客户端库 -->
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>${jedis.version}</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
		
		<!-- Thymeleaf依赖包-->
		<dependency>
		    <groupId>org.thymeleaf</groupId>
		    <artifactId>thymeleaf</artifactId>
		    <version>${thymeleaf.version}</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
		
		<dependency>
		    <groupId>org.thymeleaf</groupId>
		    <artifactId>thymeleaf-spring5</artifactId>
		    <version>${thymeleaf.version}</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
		
		<dependency>
		    <groupId>nz.net.ultraq.thymeleaf</groupId>
		    <artifactId>thymeleaf-layout-dialect</artifactId>
		    <version>${thymeleaf.layout.version}</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
		
		<!-- ReactorCore依赖包-->
		<dependency>
		    <groupId>io.projectreactor</groupId>
		    <artifactId>reactor-core</artifactId>
		    <version>3.2.3.RELEASE</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
		
		<!-- Bouncycastle依赖包 -->
		<dependency>
		    <groupId>bouncycastle</groupId>
		    <artifactId>bcprov-jdk16</artifactId>
		    <version>140</version>
		</dependency>
		
		<dependency>
		    <groupId>org.bouncycastle</groupId>
		    <artifactId>bcprov-ext-jdk16</artifactId>
		    <version>1.46</version>
		</dependency>
		
		<!-- POI依赖包 -->
		<dependency>
		    <groupId>org.apache.poi</groupId>
		    <artifactId>poi</artifactId>
		    <version>4.0.1</version>
		</dependency>
		
		<dependency>
		    <groupId>org.apache.poi</groupId>
		    <artifactId>poi-ooxml</artifactId>
		    <version>4.0.1</version>
		</dependency>
		
		<dependency>
		    <groupId>org.apache.poi</groupId>
		    <artifactId>poi-ooxml-schemas</artifactId>
		    <version>4.0.1</version>
		</dependency>
		
	</dependencies>
	
	<build>
		<finalName>boot-base</finalName>
		<sourceDirectory>src/main/java</sourceDirectory>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<defaultGoal>install</defaultGoal>
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>maven</groupId>
				<artifactId>maven-test-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>true</skipTests>
					<systemPropertyVariables>  
                        <coverage-output>html</coverage-output>  
                        <coverage-outputDir>target/coverage-report</coverage-outputDir>  
                    </systemPropertyVariables> 
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>
								${project.build.directory}/libs
                            </outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Jar Maven Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<mainClass>org.platform.modules.bootstrap.BaseBootstrapApplication</mainClass>
							<addClasspath>true</addClasspath>
					        <classpathPrefix>libs/</classpathPrefix>
					        <useUniqueVersions>false</useUniqueVersions>  
						</manifest>
					</archive>
					<manifestEntries>
						<Class-Path>.</Class-Path>
					</manifestEntries>
				</configuration>
			</plugin>
			<!-- War Maven Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<webappDirectory>src/main/webapp</webappDirectory>
					<warSourceDirectory>target/boot-base</warSourceDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tomcat-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.mybatis.generator</groupId>
				<artifactId>mybatis-generator-maven-plugin</artifactId>
				<version>1.3.6</version>
				<configuration>
					<verbose>true</verbose>
					<overwrite>true</overwrite>
				</configuration>
			</plugin>
			<!-- ProGuard混淆插件-->
            <plugin>
                <groupId>com.github.wvengen</groupId>
                <artifactId>proguard-maven-plugin</artifactId>
                <version>2.0.14</version>
                <executions>
                    <execution>
                        <!-- 混淆时刻，这里是打包的时候混淆-->
                        <phase>package</phase>
                        <goals>
                            <!-- 使用插件的混淆功能-->
                            <goal>proguard</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- 是否将生成的PG文件安装部署-->
                    <attach>true</attach>
                    <!-- 是否混淆-->
                    <obfuscate>true</obfuscate>
                    <!-- 指定生成文件分类 -->
                    <attachArtifactClassifier>pg</attachArtifactClassifier>
                    <options>
                        <option>-dontnote</option>
                        <!-- JDK目标版本1.8-->
                        <option>-target 1.8</option>
                        <!-- 不做收缩（删除注释、未被引用代码）-->
                        <option>-dontshrink</option>
                        <!-- 不做优化（变更代码实现逻辑）-->
                        <option>-dontoptimize</option>
                        <!--忽略所有告警-->
                        <option>-ignorewarnings</option>
                        <option>-adaptclassstrings</option>
                        <!-- 不跳过非公用类文件及成员-->
                        <option>-dontskipnonpubliclibraryclasses</option>
                        <option>-dontskipnonpubliclibraryclassmembers</option>
                        <!-- 优化时允许访问并修改有修饰符的类和类的成员 -->
                        <option>-allowaccessmodification</option>
                        <!-- 确定统一的混淆类的成员名称来增加混淆-->
                        <option>-useuniqueclassmembernames</option>
                        <option>-keepdirectories</option>
                        <!-- 不混淆所有包名，测试混淆后WEB项目问题实在太多，毕竟Spring配置中有大量固定写法的包名-->
                        <!--  
                        <option>-keeppackagenames</option>
                        -->
						<option>-keepattributes **</option>
                        <!-- 不混淆所有特殊的类-->
                        <!--  
                        <option>-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,LocalVariable*Table,*Annotation*,Synthetic,EnclosingMethod</option>
                        -->
                        <!-- 不混淆所有的set/get方法，如果项目中使用的部分第三方框架（例如Shiro）会用到大量的set/get映射-->
                        <option>-keepclassmembers public class * {void set*(***);*** get*();}</option>
                        
                        <!--以下配置第三方包不参与混淆-->
                 		<option>-keep class org.springframework.** {*;}</option>
                 		<option>-keepclassmembers class org.springframework.** { *;}</option>
                 		<option>-dontwarn org.springframework.**</option>
                        
                        <option>-dontwarn org.platform.modules.abstr.**</option>
                        <option>-dontwarn org.platform.modules.auth.web.**</option>
                        <option>-dontwarn org.platform.utils.exception.**</option>
                        
						<option>-keep class org.platform.modules.abstr.** {*;}</option>
						<option>-keep class org.platform.modules.bootstrap.** {*;}</option>
                        <!-- 不混淆entity包中的所有类以及类的属性及方法，混淆了会导致ORM框架及前端无法识别-->
                        <option>-keep class org.platform.modules.*.entity.** {*;}</option>
                        <option>-keep class org.platform.modules.*.dao.** {*;}</option>
                        <!-- 以下两个包因为大部分是Spring管理的Bean，不对包类的类名进行混淆，但对类中的属性和方法混淆-->
                        <option>-keep class org.platform.modules.*.controller.**</option>
                        <!--  
                        <option>-keep class org.platform.modules.*.service.**</option>
                    	-->
                    	<option>-keepclassmembers class * {
                                @org.springframework.beans.factory.annotation.Autowired *;
                                @org.springframework.beans.factory.annotation.Value *;
                            }
                        </option>
                    </options>
                    <!-- 加载文件的过滤器，就是你的工程目录了-->
                    <!--  
                    <inFilter>com/platform/**</inFilter>
                    -->
                    <!-- 对什么东西进行加载，这里仅有classes成功，毕竟你也不可能对配置文件及JSP混淆吧-->
                    <!--  
                    <injar>classes</injar>
                    -->
                    <injar>${project.build.finalName}.jar</injar>
                    <outjar>${project.build.finalName}-pg.jar</outjar>
                    <!-- 添加依赖，这里你可以按你的需要修改，这里测试只需要一个JRE的Runtime包就行了 -->
                    <libs>                           
	                    <lib>${JAVA_HOME}/jre/lib/rt.jar</lib>
	                    <!--  
	                    <lib>${JAVA_HOME}/jre/lib/jce.jar</lib>
	                	-->
	                </libs>  
	                <addMavenDescriptor>false</addMavenDescriptor>
                    <!-- 输出目录-->
                    <outputDirectory>${project.build.directory}</outputDirectory>
                </configuration>
                <dependencies>
                	<dependency>
					    <groupId>net.sf.proguard</groupId>
					    <artifactId>proguard-base</artifactId>
					    <version>6.0.3</version>
					</dependency>
                </dependencies>
            </plugin>
		</plugins>

	</build>
	
	<distributionManagement>
		<repository>  
            <id>user-release</id>  
            <name>User Project Release</name>  
            <url>http://192.168.0.124:8081/nexus/content/repositories/releases/</url>  
        </repository>  
  
        <snapshotRepository>  
            <id>user-snapshots</id>  
            <name>User Project SNAPSHOTS</name>  
            <url>http://192.168.0.124:8081/nexus/content/repositories/snapshots/</url>  
        </snapshotRepository>  
	</distributionManagement>
	
</project>
